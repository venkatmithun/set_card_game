(this.webpackJsonpset_card_game=this.webpackJsonpset_card_game||[]).push([[0],{33:function(e,t,s){},34:function(e,t,s){},42:function(e,t,s){"use strict";s.r(t);var a=s(0),r=s.n(a),c=s(16),o=s.n(c),n=(s(33),s(10)),i=s(3),d=(s(34),s(24)),l=s(25),h=s(28),u=s(27),p=s(5),f=s.n(p),m=s(12),b=s(15),j=s(14),v=Object(j.b)({name:"game",initialState:{cards:null,properties:{colors:["green","purple","red"],numbers:[1,2,3],shapes:["diamond","oval","squiggle"]},deck:[],activeCards:[],solutions:[],possibleSets:0,difficulty:0},reducers:{setDifficulty:function(e,t){var s=t.payload;e.difficulty=s,0===s?(e.cards=f.a.range(1,28),e.cards=f.a.shuffle(e.cards),e.deck=f.a.map(e.cards,(function(t){return{id:t,attr:{color:e.properties.colors[Math.floor(t%27/9)],number:e.properties.numbers[Math.floor(t%9/3)],shape:e.properties.shapes[Math.floor(t%3)]}}}))):(e.cards=f.a.range(1,82),e.cards=f.a.shuffle(e.cards),e.properties.shades=["clear","shaded","solid"],e.deck=f.a.map(e.cards,(function(t){return{id:t,attr:{color:e.properties.colors[Math.floor(t%81/27)],number:e.properties.numbers[Math.floor(t%27/9)],shade:e.properties.shades[Math.floor(t%9/3)],shape:e.properties.shapes[Math.floor(t%3)]}}}))),e.activeCards=[],e.solutions=[],e.possibleSets=0},createDeck:function(e,t){console.log("Create Deck Reducer");var s=t.payload,a=s.displayCards,r=s.showSolutions,c=e.deck.length>12?e.deck.length-12:0;e.activeCards=e.deck.splice(f.a.random(0,c),12),a(e.activeCards,e.difficulty),v.caseReducers.solveDeck(e,t),r(!1,e.solutions,e.difficulty)},solveDeck:function(e,t){try{console.log("Solve Deck Reducer");for(var s=[],a=[],r=[],c=0===e.difficulty?3:4,o=Object(b.a)(e.activeCards),n=o.length,i=0;i<n-2;i++)for(var d=i+1;d<n-1;d++)for(var l=d+1;l<n;l++){s=[o[i],o[d],o[l]];var h=0;for(var u in s[0].attr){for(var p in a=[],s)a.push(s[p].attr[u]);if(!(a[0]===a[1]&&a[1]===a[2]||a[0]!==a[1]&&a[1]!==a[2]&&a[0]!==a[2]))break;h++}if(h===c){r.push(s);break}}console.log("solutions length",r.length),0===r.length&&e.deck.length>0&&e.difficulty<2&&v.caseReducers.drawMore(e,t),e.solutions=r,e.possibleSets=r.length}catch(f){console.log("error solving set",f)}},drawMore:function(e,t){var s=t.payload,a=s.showSolutions,r=s.displayCards,c=e.deck.length>3?e.deck.length-3:0;e.activeCards=[].concat(Object(b.a)(e.activeCards),Object(b.a)(e.deck.splice(f.a.random(0,c),3))),r(e.activeCards,e.difficulty),v.caseReducers.solveDeck(e,t),a(!0,e.solutions,e.difficulty)},checkSet:function(e,t){try{for(var s=t.payload,a=s.arrayOfCards,r=s.displayCards,c=s.setFound,o=s.showSnackBar,n=e.solutions,i=0;i<n.length;i++){var d=n[i].map((function(e){return e.id}));if(f.a.isEqual(f.a.sortBy(a),f.a.sortBy(d))){n.splice(i,1);var l=[],h=Object(b.a)(e.deck);if(h.length>=3)for(var u=0;u<3;++u)l.push(h.splice(0,1)[0]);for(var p=e.activeCards.length-1;p>=0;p--)a.includes(e.activeCards[p].id)&&(l.length>0?e.activeCards[p]=l.pop():e.activeCards.splice(p,1));return e.deck=h,r(e.activeCards,e.difficulty),e.possibleSets>0?e.possibleSets--:0===e.possibleSets&&0===e.deck.length&&o("All possible Sets already found! End"),v.caseReducers.solveDeck(e,t),void c(!0,e.solutions,e.difficulty)}}return v.caseReducers.solveDeck(e,t),void c(!1,e.solutions)}catch(m){console.log("Error check set",m)}}}}),g=v.actions,k=g.createDeck,C=(g.solveDeck,g.checkSet),y=g.setDifficulty,O=g.drawMore,S=v.reducer,x=s(6),w=s(1),M=function(e){Object(h.a)(s,e);var t=Object(u.a)(s);function s(e){var a;return Object(d.a)(this,s),(a=t.call(this,e)).displayCards=function(){var e,t,s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,c=document.getElementById("gameboard");c.innerHTML="";for(var o=0;o<s.length;o++){(e=document.createElement("div")).id=s[o].id,e.className="card th",c.appendChild(e);for(var n=0;n<s[o].attr.number;n++){t=document.createElement("div");var i="";r>0&&(i=s[o].attr.shade+"-"),t.className="cardImage "+i+s[o].attr.shape+" "+s[o].attr.color+"Card",e.appendChild(t)}}a.activateCards()},a.showSolutions=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=document.getElementById("solutions");e&&(a.innerHTML="");var r=document.createElement("h1");for(var c in r.innerHTML="Solutions",a.appendChild(r),t){var o=document.createElement("div");o.className="set";var n=void 0,i=void 0;a.appendChild(o);for(var d=0;d<t[c].length;d++){(n=document.createElement("div")).className="cardSolution",o.appendChild(n);for(var l=0;l<t[c][d].attr.number;l++){i=document.createElement("div");var h="";s>0&&(h=t[c][d].attr.shade+"-"),i.className="cardImage "+h+t[c][d].attr.shape+" "+t[c][d].attr.color+"Card",n.appendChild(i)}}}},a.addEventListeners=function(){document.getElementById("reset").addEventListener("click",(function(){a.props.setDifficulty(a.props.difficulty),a.setState({attempCounts:0,errorCounts:0}),document.getElementById("solutions").innerHTML="",a.cleanSelect(a.selectedCards),a.selectedCards=[],a.props.createDeck({displayCards:a.displayCards,showSolutions:a.showSolutions})}))},a.setFound=function(e,t,s){e?(a.showSnackBar("Set found!"),a.showSolutions(!0,t,s),a.selectedCards=[],a.setState({attempCounts:a.state.attempCounts+1})):(a.showSnackBar("Sorry, this is not a Set!"),a.setState({errorCounts:a.state.errorCounts+1}),a.errorCounts++)},a.checkSet=function(){0===a.props.solutions.length?a.showSnackBar("No Sets left to find!"):3!==a.selectedCards.length?a.showSnackBar("To check Sets, please select 3 cards"):a.props.checkSet({arrayOfCards:a.selectedCards,displayCards:a.displayCards,setFound:a.setFound,showSolutions:a.showSolutions,showSnackBar:a.showSnackBar}),a.cleanSelect(a.selectedCards),a.selectedCards=[]},a.activateCards=function(){for(var e=document.getElementsByClassName("card"),t=function(t){e[t].addEventListener("click",(function(s){s.stopPropagation(),e[t].classList.toggle("selected");var r=e[t].getAttribute("id"),c=a.selectedCards.indexOf(parseInt(r));c>=0&&a.selectedCards.length>0?(e[t].classList.remove("selected"),a.selectedCards.splice(c,1)):a.selectedCards.length<3?a.selectedCards.push(parseInt(r)):(e[t].classList.toggle("selected"),console.log("Three cards already selected!")),3===a.selectedCards.length&&a.checkSet()}),!1)},s=0;s<e.length;s++)t(s)},a.cleanSelect=function(e){e.length>0&&f.a.forEach(e,(function(e){var t=document.getElementById(e);console.log("cleaning...",e,t),t&&t.classList.remove("selected")}))},a.show_hide=function(e,t){var s=document.getElementById(e),a=document.getElementById(t);"block"===s.style.display?(s.style.display="none",a.innerHTML="Show Solutions"):(s.style.display="block",a.innerHTML="Hide Solutions")},a.showSnackBar=function(e){var t=document.getElementById("snackbar");t.className="show",t.innerHTML=e,setTimeout((function(){t.className=t.className.replace("show",""),t.innerHTML=""}),3e3)},a.state={attempCounts:0,errorCounts:0},a.selectedCards=[],a}return Object(l.a)(s,[{key:"componentDidMount",value:function(){this.props.createDeck({displayCards:this.displayCards,showSolutions:this.showSolutions}),this.addEventListeners()}},{key:"render",value:function(){var e=this;return Object(w.jsxs)("div",{id:"game-parent",children:[Object(w.jsx)(n.b,{to:"/",className:"back-home",children:Object(w.jsx)("h3",{children:"Back to Home Page"})}),Object(w.jsxs)("div",{className:"flex-start-center",children:[Object(w.jsxs)("div",{children:[Object(w.jsx)("div",{id:"snackbar",children:"Some text some message.."}),Object(w.jsx)("h1",{children:"Set Game"}),Object(w.jsx)("h3",{children:"Select 3 cards from the deck below"}),Object(w.jsx)("div",{id:"gameboard"})]}),Object(w.jsxs)("div",{className:"flex-start-center flex-col pl-60",children:[Object(w.jsxs)("h3",{children:["Possible sets: ",this.props.solutions.length]}),Object(w.jsxs)("h3",{children:["Cards left: ",this.props.deck.length]}),Object(w.jsxs)("h3",{children:["Found sets: ",this.state.attempCounts]}),Object(w.jsxs)("h3",{children:["Errors: ",this.state.errorCounts]}),Object(w.jsxs)("div",{className:"flex-col",children:[Object(w.jsx)("button",{id:"cheatMode",onClick:function(){return e.show_hide("solutions","cheatMode")},children:"Show solutions"}),Object(w.jsx)("button",{id:"reset",children:"New Deck"}),Object(w.jsx)("button",{disabled:this.props.deck.length<1,onClick:function(){return e.props.drawMore({displayCards:e.displayCards,showSolutions:e.showSolutions})},children:"Draw 3"}),Object(w.jsx)("p",{children:Object(w.jsx)("a",{href:"https://en.wikipedia.org/wiki/Set_(card_game)",target:"blank",children:"How to play?"})})]})]})]}),Object(w.jsx)("div",{id:"solutions",className:"sol"})]})}}]),s}(r.a.Component);var E=Object(m.b)((function(e){return{deck:e.game.deck,activeCards:e.game.activeCards,solutions:e.game.solutions,possibleSets:e.game.possibleSets,difficulty:e.game.difficulty}}),(function(e){return Object(x.b)({createDeck:k,checkSet:C,setDifficulty:y,drawMore:O},e)}))(M);function D(){var e=Object(m.c)();return Object(w.jsxs)("div",{children:[Object(w.jsx)("h1",{children:"SET - A Card Game"}),Object(w.jsx)("a",{href:"https://en.wikipedia.org/wiki/Set_(card_game)",target:"blank",children:"How to play?"}),Object(w.jsxs)("div",{children:[Object(w.jsx)("h2",{children:"Play Game"}),Object(w.jsx)("span",{children:"By choose difficulty below"}),Object(w.jsxs)("div",{style:{display:"flex",flexDirection:"column"},children:[Object(w.jsx)(n.b,{to:"/game",onClick:function(){return e(y(0))},children:Object(w.jsx)("h3",{children:"Easy"})}),Object(w.jsx)(n.b,{to:"/game",onClick:function(){return e(y(1))},children:Object(w.jsx)("h3",{children:"Medium"})}),Object(w.jsx)(n.b,{to:"/game",onClick:function(){return e(y(2))},children:Object(w.jsx)("h3",{children:"Hard"})})]})]})]})}function B(){return Object(w.jsx)(n.a,{children:Object(w.jsxs)("div",{id:"app",children:[Object(w.jsxs)(i.c,{children:[Object(w.jsx)(i.a,{path:"/game",children:Object(w.jsx)(E,{})}),Object(w.jsx)(i.a,{path:"/",children:Object(w.jsx)(D,{})})]}),Object(w.jsx)("p",{id:"footer",children:"Made by Venkat Mithun"})]})})}var L=Object(j.a)({reducer:{game:S},middleware:Object(j.c)({serializableCheck:{ignoredActions:["game/createDeck","game/setDifficulty","game/solveDeck","game/drawMore","game/checkSet"]}})});Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(Object(w.jsx)(r.a.StrictMode,{children:Object(w.jsx)(m.a,{store:L,children:Object(w.jsx)(B,{})})}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[42,1,2]]]);
//# sourceMappingURL=main.a071236b.chunk.js.map